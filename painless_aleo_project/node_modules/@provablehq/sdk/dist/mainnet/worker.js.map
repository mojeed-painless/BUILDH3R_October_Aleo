{"version":3,"file":"worker.js","sources":["../../src/worker.ts"],"sourcesContent":["import \"./polyfill/shared\";\nimport {initThreadPool, ProgramManager, PrivateKey, verifyFunctionExecution, FunctionKeyPair} from \"./browser\";\nimport { AleoKeyProvider, AleoKeyProviderParams} from \"./function-key-provider\";\nimport { expose } from \"comlink\";\n\nawait initThreadPool();\n\nconst defaultHost = \"https://api.explorer.provable.com/v1\";\nconst keyProvider = new AleoKeyProvider();\nconst programManager = new ProgramManager(\n    defaultHost,\n    keyProvider,\n    undefined\n);\n\nkeyProvider.useCache(true);\n\nlet lastLocalProgram: string = \"\";\n\nexport interface WorkerAPI {\n    run: (\n        localProgram: string,\n        aleoFunction: string,\n        inputs: string[],\n        privateKey: string\n    ) => Promise<{ outputs: any; execution: string } | string>;\n\n    getPrivateKey: () => Promise<PrivateKey>;\n}\nasync function run(\n    localProgram: string,\n    aleoFunction: string,\n    inputs: string[],\n    privateKey: string,\n    proveExecution = false\n) {\n    console.log(\"Web worker: Executing function locally...\");\n    const startTime = performance.now();\n\n    // Ensure the program is valid and that it contains the function specified\n    let program;\n\n    try {\n        program = programManager.createProgramFromSource(localProgram);\n    } catch (e) {\n        throw new Error(\"Error creating program from source\");\n    }\n\n    const program_id = program.id();\n    if (!program.hasFunction(aleoFunction)) {\n        throw new Error(`Program ${program_id} does not contain function ${aleoFunction}`);\n    }\n    const cacheKey = `${program_id}:${aleoFunction}`;\n\n\n    // Get the program imports\n    let imports;\n\n    try {\n        imports = await programManager.networkClient.getProgramImports(\n            localProgram\n        );\n    } catch (e) {\n        throw new Error(\"Error getting program imports\");\n    }\n\n    // Get the proving and verifying keys for the function\n    if (lastLocalProgram !== localProgram) {\n        const keys = <FunctionKeyPair>await programManager.synthesizeKeys(\n            localProgram,\n            aleoFunction,\n            inputs,\n            PrivateKey.from_string(privateKey)\n        );\n        programManager.keyProvider.cacheKeys(cacheKey, keys);\n        lastLocalProgram = localProgram;\n    }\n\n    // Pass the cache key to the execute function\n    const keyParams = new AleoKeyProviderParams({\n        cacheKey: cacheKey,\n    });\n\n    // Execute the function locally\n    const response = await programManager.run(\n        localProgram,\n        aleoFunction,\n        inputs,\n        proveExecution,\n        imports,\n        keyParams,\n        undefined,\n        undefined,\n        PrivateKey.from_string(privateKey),\n    );\n\n    // Return the outputs to the main thread\n    console.log(\n        `Web worker: Local execution completed in ${\n            performance.now() - startTime\n        } ms`\n    );\n    const outputs = response.getOutputs();\n    const execution = response.getExecution();\n    let executionString = \"\";\n\n    let keys;\n\n    try {\n        keys = keyProvider.getKeys(cacheKey);\n    } catch (e) {\n        throw new Error(\"Could not get verifying key\");\n    }\n\n    const verifyingKey = keys[1];\n\n    if (execution) {\n        verifyFunctionExecution(\n            execution,\n            verifyingKey,\n            program,\n            \"hello\"\n        );\n        executionString = execution.toString();\n        console.log(\"Execution verified successfully: \" + execution);\n    } else {\n        executionString = \"\";\n    }\n\n    console.log(`Function execution response: ${outputs}`);\n\n    return { outputs: outputs, execution: executionString };\n}\n\nasync function getPrivateKey() {\n    const privateKey = new PrivateKey();\n    return privateKey.to_string();\n}\n\nconst workerAPI = { run, getPrivateKey };\nexpose(workerAPI);\n"],"names":[],"mappings":"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"}
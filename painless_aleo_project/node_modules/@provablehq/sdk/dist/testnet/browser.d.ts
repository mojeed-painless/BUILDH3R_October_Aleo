import "./polyfill/shared";
import { VerifyingKey } from "@provablehq/wasm/testnet.js";
declare const KEY_STORE: string;
interface Key {
    name: string;
    locator: string;
    prover: string;
    verifier: string;
    verifyingKey: () => VerifyingKey;
}
declare const CREDITS_PROGRAM_KEYS: {
    bond_public: Key;
    bond_validator: Key;
    claim_unbond_public: Key;
    fee_private: Key;
    fee_public: Key;
    inclusion: Key;
    join: Key;
    set_validator_state: Key;
    split: Key;
    transfer_private: Key;
    transfer_private_to_public: Key;
    transfer_public: Key;
    transfer_public_as_signer: Key;
    transfer_public_to_private: Key;
    unbond_public: Key;
    getKey: (key: string) => Key;
};
declare const PRIVATE_TRANSFER_TYPES: Set<string>;
declare const VALID_TRANSFER_TYPES: Set<string>;
declare const PRIVATE_TRANSFER: Set<string>;
declare const PRIVATE_TO_PUBLIC_TRANSFER: Set<string>;
declare const PUBLIC_TRANSFER: Set<string>;
declare const PUBLIC_TRANSFER_AS_SIGNER: Set<string>;
declare const PUBLIC_TO_PRIVATE_TRANSFER: Set<string>;
declare function logAndThrow(message: string): never;
import { Account } from "./account";
import { AleoNetworkClient, ProgramImports } from "./network-client";
import { Block } from "./models/block";
import { Execution } from "./models/execution";
import { Input } from "./models/input";
import { Output } from "./models/output";
import { TransactionModel } from "./models/transactionModel";
import { Transition } from "./models/transition";
import { AleoKeyProvider, AleoKeyProviderParams, AleoKeyProviderInitParams, CachedKeyPair, FunctionKeyPair, FunctionKeyProvider, KeySearchParams } from "./function-key-provider";
import { OfflineKeyProvider, OfflineSearchParams } from "./offline-key-provider";
import { BlockHeightSearch, NetworkRecordProvider, RecordProvider, RecordSearchParams } from "./record-provider";
declare function initializeWasm(): Promise<void>;
export { createAleoWorker } from "./managed-worker";
export { ProgramManager } from "./program-manager";
export { Address, Execution as FunctionExecution, ExecutionResponse, Field, OfflineQuery, PrivateKey, PrivateKeyCiphertext, Program, ProgramManager as ProgramManagerBase, ProvingKey, RecordCiphertext, RecordPlaintext, Signature, Transaction, VerifyingKey, ViewKey, initThreadPool, verifyFunctionExecution, } from "@provablehq/wasm/testnet.js";
export { initializeWasm };
export { Account, AleoKeyProvider, AleoKeyProviderParams, AleoKeyProviderInitParams, AleoNetworkClient, Block, BlockHeightSearch, CachedKeyPair, Execution, FunctionKeyPair, FunctionKeyProvider, Input, Key, KeySearchParams, NetworkRecordProvider, ProgramImports, OfflineKeyProvider, OfflineSearchParams, Output, RecordProvider, RecordSearchParams, TransactionModel, Transition, CREDITS_PROGRAM_KEYS, KEY_STORE, PRIVATE_TRANSFER, PRIVATE_TO_PUBLIC_TRANSFER, PRIVATE_TRANSFER_TYPES, PUBLIC_TRANSFER, PUBLIC_TRANSFER_AS_SIGNER, PUBLIC_TO_PRIVATE_TRANSFER, VALID_TRANSFER_TYPES, logAndThrow, };
